/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 bed.glb -t 
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { RigidBody } from "@react-three/rapier";

type GLTFResult = GLTF & {
  nodes: {
    frame: THREE.Mesh;
    legs: THREE.Mesh;
    matress: THREE.Mesh;
    blanket: THREE.Mesh;
    Cube: THREE.Mesh;
    Cube001: THREE.Mesh;
  };
  materials: {
    black: THREE.MeshStandardMaterial;
    Wood: THREE.MeshStandardMaterial;
    white: THREE.MeshStandardMaterial;
    Blue: THREE.MeshStandardMaterial;
    lightBlue: THREE.MeshStandardMaterial;
  };
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    `${process.env.PUBLIC_URL}/Models/bed.glb`
  ) as GLTFResult;
  return (
    <group
      {...props}
      dispose={null}
      scale={0.4}
      rotation={[0, -Math.PI / 2, 0]}
      position={[-4.2, -0.2, -4]}
    >
      <RigidBody type="fixed">
        <mesh
          geometry={nodes.frame.geometry}
          material={materials.black}
          position={[0, 2.038, 0]}
        />
        <mesh
          geometry={nodes.legs.geometry}
          material={materials.Wood}
          position={[-2.328, 0.852, 7.089]}
          scale={0.447}
        />
        <mesh
          geometry={nodes.matress.geometry}
          material={materials.white}
          position={[0, 2.935, 0]}
          scale={[2.774, 0.531, 7.519]}
        />
        <mesh
          geometry={nodes.blanket.geometry}
          material={materials.Blue}
          position={[0, 3.084, -1.283]}
          scale={[2.873, 0.531, 6.254]}
        />
        <mesh
          geometry={nodes.Cube.geometry}
          material={materials.lightBlue}
          position={[0.69, 3.856, 5.894]}
          rotation={[Math.PI / 2, 0, -0.278]}
          scale={[1.687, 1.214, 0.107]}
        />
        <mesh
          geometry={nodes.Cube001.geometry}
          material={materials.lightBlue}
          position={[-1.153, 4.223, 6.384]}
          rotation={[1.582, 0.402, -0.041]}
          scale={[1.687, 1.214, 0.107]}
        />
      </RigidBody>
    </group>
  );
}

useGLTF.preload(`${process.env.PUBLIC_URL}/Models/bed.glb`);

export { Model as Bed };
