/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 clock.glb -t 
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Circle002: THREE.Mesh;
    Circle002_1: THREE.Mesh;
  };
  materials: {
    ["Material.063"]: THREE.MeshStandardMaterial;
    ["Material.064"]: THREE.MeshStandardMaterial;
  };
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    `${process.env.PUBLIC_URL}/Models/clock.glb`
  ) as GLTFResult;
  return (
    <group {...props} dispose={null} position={[-7.49, 3, 4]} scale={0.8}>
      <group position={[0, 1, 0]} rotation={[0, 0, -Math.PI / 2]} scale={0.614}>
        <mesh
          geometry={nodes.Circle002.geometry}
          material={materials["Material.063"]}
        />
        <mesh
          geometry={nodes.Circle002_1.geometry}
          material={materials["Material.064"]}
        />
      </group>
    </group>
  );
}

useGLTF.preload(`${process.env.PUBLIC_URL}/Models/clock.glb`);

export { Model as Clock };
