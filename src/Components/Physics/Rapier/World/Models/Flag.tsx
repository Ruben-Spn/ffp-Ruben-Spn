/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 flag.glb -t 
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    flag: THREE.Mesh;
    Cylinder001: THREE.Mesh;
    Cylinder001_1: THREE.Mesh;
  };
  materials: {
    image: THREE.MeshStandardMaterial;
    grey: THREE.MeshStandardMaterial;
    red: THREE.MeshStandardMaterial;
  };
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    `${process.env.PUBLIC_URL}/Models/flag.glb`
  ) as GLTFResult;
  return (
    <group
      {...props}
      dispose={null}
      position={[-3, 1.3, -5.97]}
      scale={0.8}
      rotation={[0, -Math.PI / 2, 0]}
    >
      <mesh
        geometry={nodes.flag.geometry}
        material={materials.image}
        position={[0, 2.072, 0]}
        rotation={[0, 0, -Math.PI / 2]}
        scale={[2.035, 2.035, 3.434]}
      />
      <group
        position={[0.193, 3.959, 3.273]}
        rotation={[2.313, 0.061, -1.516]}
        scale={[0.044, 0.007, 0.044]}
      >
        <mesh geometry={nodes.Cylinder001.geometry} material={materials.grey} />
        <mesh
          geometry={nodes.Cylinder001_1.geometry}
          material={materials.red}
        />
      </group>
    </group>
  );
}

useGLTF.preload(`${process.env.PUBLIC_URL}/Models/flag.glb`);

export { Model as Flag };
