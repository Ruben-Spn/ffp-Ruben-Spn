/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 credits.glb -t 
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import swal from "sweetalert";
import {
  cursorActiveHandler,
  cursorInactiveHandler,
} from "Components/UserInterface/CursorOverlay";

type GLTFResult = GLTF & {
  nodes: {
    Text: THREE.Mesh;
  };
  materials: {
    ["Material.001"]: THREE.MeshStandardMaterial;
  };
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    `${process.env.PUBLIC_URL}/Models/credits.glb`
  ) as GLTFResult;
  return (
    <group
      {...props}
      dispose={null}
      position={[-7.49, 2.7, 2]}
      scale={0.5}
      onPointerEnter={cursorActiveHandler}
      onPointerLeave={cursorInactiveHandler}
      onPointerOut={cursorInactiveHandler}
      onPointerOver={cursorActiveHandler}
      onClick={() => {
        swal(
          "Credits",
          "Heating Unit, Office Chair and Lamps by - Sellpet, Throphy by Bob.Ho"
        );
      }}
    >
      <mesh
        geometry={nodes.Text.geometry}
        material={materials["Material.001"]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
      />
    </group>
  );
}

useGLTF.preload(`${process.env.PUBLIC_URL}/Models/credits.glb`);

export { Model as Credits };
